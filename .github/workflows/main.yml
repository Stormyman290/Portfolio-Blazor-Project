name: Deploy to GitHub Pages
#
#
# Helped by https://swimburger.net/blog/dotnet/how-to-deploy-aspnet-blazor-webassembly-to-github-pages
#
#

# Run workflow on every push to the main branch
on:
  push:
    branches: [ main ]

# To help the workflow/commit to pages step acces the repo
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  deploy-to-github-pages:
    # use ubuntu-latest image to run steps on
    runs-on: ubuntu-latest
    steps:
    # uses GitHub's checkout action to checkout code form the main branch
    - uses: actions/checkout@v2
    
    # sets up .NET Core SDK 7.0.x (7.0.0 or later)
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
        
    # publishes Blazor project to the release-folder
    - name: Publish .NET Core Project
      run: dotnet publish CHBlazorPortfolioTake3/CHBlazorPortfolioTake3/CHBlazorPortfolioTake3.csproj -c Release -o release --nologo
      # -c (--configuration) argument tells to build the project using the Release configuration.
      # -o (--output) argument specifies where to put the published files. Tells dotnet to publish the project to the release folder.
      # --nologo argument will prevent some unnecessary lines from being output to the console.



    # changes the base-tag in index.html from '/' to 'CHBlazorPortfolioTake3' to match GitHub Pages repository subdirectory
    - name: Change base-tag in index.html from / to CHBlazorPortfolioTake3
      run: sed -i 's/<base href="\/" \/>/<base href="\/CHBlazorPortfolioTake3\/" \/>/g' release/wwwroot/index.html

    # copy index.html to 404.html to serve the same file when a file is not found
    - name: copy index.html to 404.html
      run: cp release/wwwroot/index.html release/wwwroot/404.html

    # add .nojekyll file to tell GitHub pages to not treat this as a Jekyll project. (Allow files and folders starting with an underscore)
    - name: Add .nojekyll file
      run: touch release/wwwroot/.nojekyll
      

    
    # This makes it easy to publish static files to GitHub Pages
    - name: Commit wwwroot to GitHub Pages
      uses: JamesIves/github-pages-deploy-action@4.0.0
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: release/wwwroot
        # ${{ secrets.GITHUB_TOKEN }} resolves to a token used for securely communicating with GitHub on your behalf. This token is available by default in all workflows and permissions are limited to the repository that contains your workflow. By passing it into the GITHUB_TOKEN property, the action can use it to create and push to the 'gh-pages' branch.
        # The BRANCH property will configure which branch the action will create and push to. Set this to 'gh-pages'.
        # The FOLDER property will configure which folder and files will be pushed to the 'gh-pages' branch. Set this to 'release/wwwroot'. This is where the project will be published, and all the static resources are in the wwwroot-subfolder.
        
        
